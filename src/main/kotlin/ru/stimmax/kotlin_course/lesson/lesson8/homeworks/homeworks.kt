package ru.stimmax.ru.stimmax.kotlin_course.lesson.lesson8.homeworks

import ru.stimmax.ru.stimmax.kotlin_course.lesson.lesson3.date

fun main() {

    exe("Это невозможно выполнить за один день")
    exe("Я не уверен в успехе этого проекта")
    exe("Произошла катастрофа на сервере")
    exe("Этот код работает без проблем")
    exe("Удача")
    exe1("Пользователь вошел в систему -> 2021-12-01 09:48:23")
    exe2("4539 1488 0343 6467")
    exe3("username@example.com")
    exe4("C:/Пользователи/Документы/report.txt")
    exe4("D:/good.themes/dracula.theme")
    exe5("Котлин лучший язык программирования")
    //1. Преобразование строк
    //Создайте функцию, которая будет анализировать входящие фразы и применять к ним различные преобразования,
    //делая текст более ироничным или забавным. Функция должна уметь распознавать ключевые слова
    // или условия и соответственно изменять фразу.
    //Правила проверки и преобразования:
    //Если фраза содержит слово "невозможно":
    //Преобразование: Замените "невозможно" на "совершенно точно возможно, просто требует времени".
    //Если фраза начинается с "Я не уверен":
    //Преобразование: Добавьте в конец фразы ", но моя интуиция говорит об обратном".
    //Если фраза содержит слово "катастрофа":
    //Преобразование: Замените "катастрофа" на "интересное событие".
    //Если фраза заканчивается на "без проблем":
    //Преобразование: Замените "без проблем" на "с парой интересных вызовов на пути".
    //Если фраза содержит только одно слово:
    //Преобразование: Добавьте перед словом "Иногда," и после слова ", но не всегда".


}
fun exe(arg: String) {
    val phrase = when {
        arg.contains("невозможно") -> arg.replace(
            "невозможно",
            "совершенно точно возможно, просто требует времени"
        )

        arg.startsWith("Я не уверен") -> arg.plus(" но моя интуиция говорит об обратном")
        arg.contains("катастрофа") -> arg.replace(
            "катастрофа",
            "интересное событие"
        )

        arg.endsWith("без проблем") -> arg.replace(
            "без проблем",
            "с парой интересных вызовов на пути"
        )

        !arg.contains(Regex("\\s")) -> "Иногда, $arg, но не всегда"
        else -> arg
    }
    println(phrase)
}
//2. Извлечение даты из строки лога
//У вас есть строка лога, например "Пользователь вошел в систему -> 2021-12-01 09:48:23"
// (данные могут быть любыми, но формат всегда такой).
// Извлеките отдельно дату и время из этой строки и сразу распечатай их по очереди.
//Используй indexOf или split для получения правой части сообщения.

fun exe1(arg: String) {
    val date = arg.split(" ")
    println(date[5])
    println(date[6])
}
//3. Маскирование личных данных
//Дана строка с номером кредитной карты, например "4539 1488 0343 6467".
// Замаскируйте все цифры, кроме последних четырех, символами "*".

fun exe2(arg: String) {
    val cardSplit = arg.split(" ")
    val mapCard = cardSplit.mapIndexed { index, value -> if (index < 3) "****" else value}
    val shadowCard = mapCard.joinToString(" ")
    println(shadowCard)
}
//4. Форматирование адреса электронной почты.
//У вас есть электронный адрес, например "username@example.com".
// Преобразуйте его в строку "username [at] example [dot] com", используя функцию replace()

fun exe3(arg: String) {
    val finishString = arg.replace("@", " [at] ").replace(".", " [dot] ")
    println(finishString)
}

//5. Извлечение имени файла из пути.
//Дан путь к файлу, например "C:/Пользователи/Документы/report.txt" или "D:/good.themes/dracula.theme"
// (может быть любым). Извлеките название файла с расширением.

fun exe4(arg: String) {
    val fileSplit = arg.split("/").reversed()
    println(fileSplit[0])
}
// 6. Создание аббревиатуры из фразы.
//У вас есть фраза, например "Котлин лучший язык программирования"
// (может быть любой с разделителями слов - пробел). Создайте аббревиатуру из начальных букв слов (например, "ООП").
//Используйте split. Используйте for для перебора слов. Используйте var переменную для накопления первых букв.

fun exe5(arg: String) {
    val stringSplit = arg.split(" ")
    var counter = ""
    for (word in stringSplit) {
       val firstLetter = word[0].uppercase()
        counter += firstLetter
    }
    println(counter)
}